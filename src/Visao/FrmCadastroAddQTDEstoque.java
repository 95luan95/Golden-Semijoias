/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visao;

import Bean.CrudEstoqueMB;
import DTO.ItemVendaDTO;
import DTO.TamanhoDTO;
import javax.swing.JOptionPane;

/**
 *
 * @author Luan
 */
public class FrmCadastroAddQTDEstoque extends javax.swing.JInternalFrame {

    /**
     * Creates new form FrmCadastroPessoa
     */
    private int id_Produto;
    private int id_tamanho;
    private CrudEstoqueMB bean = new CrudEstoqueMB();
    private CrudEstoqueQTD crudEstoqueQTD;
    private String estoqueVenda = "";
    private ItemVendaDTO itemVendaQTD = new ItemVendaDTO();
    FrmVenda frmCadastroVenda = new FrmVenda();
    
    public FrmCadastroAddQTDEstoque(int id_Produto, int id_tamanho, CrudEstoqueQTD crudEstoqueQTD, String estoqueVenda) {
        initComponents();
        this.id_Produto = id_Produto;
        this.id_tamanho = id_tamanho;
        this.crudEstoqueQTD = crudEstoqueQTD;
        this.estoqueVenda = estoqueVenda;
        
    }
    
    public int controlarEstoqueAdd(int qtd){
        int atualQTD = bean.getQTD(id_Produto, id_tamanho);

        int resultado;

        resultado = atualQTD + qtd;

        if(bean.tamanhoExiste(id_tamanho, id_Produto) == -1){
            if(bean.insert(resultado, id_Produto, id_tamanho) != -1){
                JOptionPane.showMessageDialog(this, "Itens adicionados no estoque com sucesso!", "", WIDTH);
                this.setVisible(false);
                return 0;
            }else{
                JOptionPane.showMessageDialog(this, "Erro inserir itens no estoque!", "", WIDTH);
                return -1;
            }
        }else{
            if(bean.updateItemQTD(resultado, id_Produto, id_tamanho) != -1){
                JOptionPane.showMessageDialog(this, "Itens adicionados no estoque com sucesso!", "", WIDTH);
                this.setVisible(false);
                return 0;
            }else{
                JOptionPane.showMessageDialog(this, "Erro inserir itens no estoque!", "", WIDTH);
                return -1;
            }
        }
    }
    
    void passaClass(FrmVenda frmCadastroVenda) {
        this.frmCadastroVenda = frmCadastroVenda;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        QTDTextField = new javax.swing.JTextField();
        BtnAdd = new javax.swing.JButton();
        BtnCancelar = new javax.swing.JButton();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconifiable(true);
        setTitle("Selecione a QTD");

        jLabel6.setText("Quantidade");

        QTDTextField.setColumns(15);

        BtnAdd.setText("Adicionar");
        BtnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAddActionPerformed(evt);
            }
        });

        BtnCancelar.setText("Cancelar");
        BtnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BtnCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BtnAdd))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(QTDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(QTDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(BtnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BtnCancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAddActionPerformed
        // TODO add your handling code here:
        TamanhoDTO t = new TamanhoDTO();
        t.setTamanho(Integer.parseInt(this.QTDTextField.getText()));
        
        if(this.estoqueVenda.equals("E")){
            int atualQTD = bean.getQTD(id_Produto, id_tamanho);

            int resultado;

            if(t.getTamanho() < 1){
                JOptionPane.showMessageDialog(this, "O numero nÃ£o pode ser zero ou negativo!", "", WIDTH);
                return;
            }else{
                resultado = atualQTD + t.getTamanho();

                if(bean.tamanhoExiste(id_tamanho, id_Produto) == -1){
                    if(bean.insert(resultado, id_Produto, id_tamanho) != -1){
                        JOptionPane.showMessageDialog(this, "Itens adicionados no estoque com sucesso!", "", WIDTH);
                        this.setVisible(false);
                        crudEstoqueQTD.atualizaTabela(id_Produto);
                    }else{
                        JOptionPane.showMessageDialog(this, "Erro inserir itens no estoque!", "", WIDTH);
                    }
                }else{
                    if(bean.updateItemQTD(resultado, id_Produto, id_tamanho) != -1){
                        JOptionPane.showMessageDialog(this, "Itens adicionados no estoque com sucesso!", "", WIDTH);
                        this.setVisible(false);
                        crudEstoqueQTD.atualizaTabela(id_Produto);
                    }else{
                        JOptionPane.showMessageDialog(this, "Erro inserir itens no estoque!", "", WIDTH);
                    }
                }
            }
        }else{
            itemVendaQTD.setIdEstoque(bean.retornaIdEstoque(id_Produto, id_tamanho));
            itemVendaQTD.setQtdProduto(Integer.parseInt(this.QTDTextField.getText()));
            
            frmCadastroVenda.addItemArrayItemVendaDTO(itemVendaQTD);
            
            int atualQTD = bean.getQTD(id_Produto, id_tamanho);

            int resultado;
            
            if(atualQTD < t.getTamanho()){
                JOptionPane.showMessageDialog(this, "Estoque insuficiente!", "", WIDTH);
                return;
            }else{
                resultado = atualQTD - t.getTamanho();
                
                if(bean.tamanhoExiste(id_tamanho, id_Produto) == -1){
                    if(bean.insert(resultado, id_Produto, id_tamanho) != -1){
                        JOptionPane.showMessageDialog(this, "Itens retirado do estoque com sucesso!", "", WIDTH);
                        this.setVisible(false);
                        crudEstoqueQTD.atualizaTabela(id_Produto);
                    }else{
                        JOptionPane.showMessageDialog(this, "Erro retirar itens no estoque!", "", WIDTH);
                    }
                }else{
                    if(bean.updateItemQTD(resultado, id_Produto, id_tamanho) != -1){
                        JOptionPane.showMessageDialog(this, "Itens adicionados no estoque com sucesso!", "", WIDTH);
                        this.setVisible(false);
                        crudEstoqueQTD.atualizaTabela(id_Produto);
                    }else{
                        JOptionPane.showMessageDialog(this, "Erro inserir itens no estoque!", "", WIDTH);
                    }
                }
            }
            
            frmCadastroVenda.atualizaTabela();
            this.setVisible(false);
            crudEstoqueQTD.setVisible(false);
        }
    }//GEN-LAST:event_BtnAddActionPerformed

    private void BtnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCancelarActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_BtnCancelarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnAdd;
    private javax.swing.JButton BtnCancelar;
    private javax.swing.JTextField QTDTextField;
    private javax.swing.JLabel jLabel6;
    // End of variables declaration//GEN-END:variables

    

}
